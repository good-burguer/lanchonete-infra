apiVersion: apps/v1
kind: Deployment
metadata:
  name: lanchonete-app
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels: { app: lanchonete-app }
  template:
    metadata:
      labels: { app: lanchonete-app }
    spec:
      serviceAccountName: lanchonete-app-sa
      automountServiceAccountToken: true
      volumes:
        - name: aws-iam-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: sts.amazonaws.com
                  path: token
                  expirationSeconds: 86400
      containers:
        - name: app
          image: ${APP_IMAGE_URI}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          command: ["python"]
          args: ["-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8080"]
          env:
            - name: AWS_REGION
              value: us-east-1
            - name: DB_SECRET_NAME
              value: gb/dev/rds/postgres
            - name: AWS_STS_REGIONAL_ENDPOINTS
              value: regional
          volumeMounts:
            - name: aws-iam-token
              mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
              readOnly: true
          # (opcional) healthchecks
          readinessProbe:
            httpGet: { path: /health/, port: 8080 }
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /health/, port: 8080 }
            initialDelaySeconds: 20
            periodSeconds: 20