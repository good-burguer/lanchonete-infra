name: terraform-apply

on:
  push:
    branches: [ "main" ]
    paths: [ "environments/dev/**", ".github/workflows/terraform-apply.yml" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: environments/dev
    steps:
      - uses: actions/checkout@v4
      - name: Preflight â€“ repo/ref & role
        run: |
          echo "Repo: ${{ github.repository }} | Ref: ${{ github.ref }} | SHA: ${{ github.sha }}"
          if [ -z "${{ secrets.AWS_ROLE_TERRAFORM }}" ]; then
            echo "ERROR: secrets.AWS_ROLE_TERRAFORM is empty"; exit 1; fi
          echo "Role to assume: ${{ secrets.AWS_ROLE_TERRAFORM }}"

      - name: OIDC token smoke-test (no secret output)
        uses: actions/github-script@v7
        id: oidc
        with:
          script: |
            const token = await core.getIDToken('sts.amazonaws.com');
            core.setOutput('has', token ? 'yes' : 'no');
            core.setSecret(token);
            const payload = JSON.parse(Buffer.from(token.split('.')[1], 'base64').toString());
            core.info(`OIDC aud=${payload.aud} sub=${payload.sub}`);
      - name: Debug tree
        run: |
          pwd
          git rev-parse --short HEAD
          ls -la
          echo "----- variables.tf -----"
          sed -n '1,160p' variables.tf || true
      - uses: hashicorp/setup-terraform@v3
      - uses: aws-actions/configure-aws-credentials@v4
        env:
          AWS_ACTIONS_ENABLE_OIDC_DEBUG_LOGS: "true"
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TERRAFORM }}
          role-session-name: gha-terraform-${{ github.run_id }}
          aws-region: ${{ vars.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: STS - who am I?
        run: |
          set -euo pipefail
          echo "Repo: ${{ github.repository }} | Ref: ${{ github.ref }} | SHA: ${{ github.sha }}"
          aws sts get-caller-identity || { echo "No AWS creds set (assume-role likely failed)"; exit 1; }

      - name: Terraform Init
        run: |
          terraform init -input=false \
            -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" \
            -backend-config="key=infra/terraform.tfstate" \
            -backend-config="region=${{ vars.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ vars.TF_LOCK_TABLE }}" \
            -backend-config="encrypt=true"

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -var="aws_region=${{ vars.AWS_REGION }}" -var="tf_state_bucket=${{ vars.TF_STATE_BUCKET }}" -var="tf_lock_table=${{ vars.TF_LOCK_TABLE }}"